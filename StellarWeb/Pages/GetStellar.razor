@page "/getstellar"

<PageTitle>Weather forecast</PageTitle>

@using StellarLib
@using Microsoft.Extensions.DependencyInjection
@inject IStellarService stellarService;

<h1>Yes</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (false)
{
    <p><em>Loading...</em></p>
}
else
{
    @* <table class="table">
    <thead>
    <tr>
    <th>Date</th>
    <th>Temp. (C)</th>
    <th>Temp. (F)</th>
    <th>Summary</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var forecast in forecasts)
    {
    <tr>
    <td>@forecast.Date.ToShortDateString()</td>
    <td>@forecast.TemperatureC</td>
    <td>@forecast.TemperatureF</td>
    <td>@forecast.Summary</td>
    </tr>
    }
    </tbody>
    </table> *@
}

@code {

    @* protected override async Task OnInitializedAsync()
        {
        await Task.FromResult<>();
        } *@

    protected override void OnInitialized()
    {
        string v = stellarService.GetSomething();

        @* var collection = new ServiceCollection();
            collection.AddHttpClient<IStellarService, TokenService>("asdf", client => 
            {
                client.BaseAddress = new Uri("https://www.msn.com");
            });
            
            var provider = collection.BuildServiceProvider();
            var s = provider.GetService<IStellarService>(); *@
    }
}
